{"version":3,"sources":["logo.svg","Navi.js","OpenCritic_logo.svg","Cards.js","FilterDropDown.js","CardGroup.js","SearchBox.js","Content.js","App.js","reportWebVitals.js","index.js"],"names":["Navi","Navbar","className","variant","expand","Container","Brand","href","alt","src","logo","width","height","Toggle","Collapse","id","Nav","Link","NavDropdown","title","Item","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","theURL","fxc","theUrl","xmlHttp","XMLHttpRequest","open","send","response","httpGet","fxcp","JSON","parse","phpExchange","rates","USD","MXN","console","log","Cards","Title","Image","Score","SaleEnds","Slug","Genre","SalePrice","Discount","firstDate","URL","secondDate","DaysLeft","props","diffDays","Math","round","Badge","bg","text","OpenScore","score","hasScore","OpenCriticLogo","PercentOff","PesoPrice","Col","to","style","color","textDecoration","Card","Img","ImgOverlay","Body","Text","isExpired","FilterDropDown","clearFilter","clearSearchChange","onFilterChange","genreDropDown","onDropDownChange","fluid","Row","xs","lg","sm","md","xl","Dropdown","size","Menu","onClick","CardGroup","games","posts","loading","length","map","user","i","SCORE","genre","SearchBox","searchfield","onSearchChange","rel","value","type","placeholder","onChange","e","Content","match","matchGames","filter","game","params","description","split","Header","Button","App","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","asliced","x","y","slicedArray","slice","push","gameFromApp","totalPage","ceil","useState","pageNumber","setPageNumber","handlePageClick","data","currentPage","selected","currentPagex","fetchGames","setCurrPage","setSearchfield","filterField","setFilterField","currPage","setGenreDropDown","dropDownValue","event","target","filterGenre","toLowerCase","includes","path","exact","render","initialPage","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLinkClassName","activeClassName","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"w1vpCAAe,MAA0B,iC,uCCsC1BA,EAjCF,WAET,OACF,cAACC,EAAA,EAAD,CAAQC,UAAU,mBAAmBC,QAAQ,OAAOC,OAAO,KAA3D,SACE,eAACC,EAAA,EAAD,WACE,eAACJ,EAAA,EAAOK,MAAR,CAAcJ,UAAU,YAAYK,KAAK,IAAzC,UACE,qBACEC,IAAI,GACJC,IAAKC,EACLC,MAAM,KACNC,OAAO,KACPV,UAAU,0CAET,IARL,gBAWC,cAACD,EAAA,EAAOY,OAAR,CAAe,gBAAc,qBAChC,cAACZ,EAAA,EAAOa,SAAR,CAAiBC,GAAG,mBAApB,SACE,eAACC,EAAA,EAAD,CAAKd,UAAU,kBAAf,UACE,cAACc,EAAA,EAAIC,KAAL,CAAUV,KAAK,QAAf,oBACA,cAACS,EAAA,EAAIC,KAAL,CAAUV,KAAK,QAAf,yBACA,eAACW,EAAA,EAAD,CAAaC,MAAM,aAAaJ,GAAG,qBAAnC,UACE,cAACG,EAAA,EAAYE,KAAb,CAAkBb,KAAK,cAAvB,mBACA,cAACW,EAAA,EAAYE,KAAb,CAAkBb,KAAK,cAAvB,oC,wBC5BK,MAA0B,4C,gBCQzBc,EAAQ,IAAIC,KACZC,EAAKC,OAAOH,EAAMI,WAAWC,SAAS,EAAG,KACzCC,EAAKH,OAAOH,EAAMO,WAAa,GAAGF,SAAS,EAAG,KAC9CG,EAAOR,EAAMS,cAIbC,EAAS,qDAFbV,EAAQQ,EAAO,IAAMF,EAAK,IAAMJ,GAE2C,IAS3E,IAAIS,EAPJ,SAAiBC,GACb,IAAIC,EAAU,IAAIC,eAGlB,OAFAD,EAAQE,KAAK,MAAOL,GAAQ,GAC5BG,EAAQG,KAAK,MACNH,EAAQI,SAGTC,GACJC,EAAOC,KAAKC,MAAMV,GAGpBW,EAAc,EAAIH,EAAKI,MAAMC,IACXL,EAAKI,MAAME,IAEjCC,QAAQC,IAAIL,GAExB,IAuFeM,EAvFD,SAAC,GAA8E,IAA5EC,EAA2E,EAA3EA,MAAOC,EAAoE,EAApEA,MAAOC,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,SAAiBC,GAAqC,EAA5CC,MAA4C,EAArCD,MAAME,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,SAWtDC,GAX0E,EAAVC,IAWpD,IAAIrC,MAChBsC,EAAa,IAAItC,KAAK+B,GAG5B,SAASQ,EAASC,GAEhB,IAAMC,EAAWC,KAAKC,OAAOL,EAAaF,GAP7B,OASb,OAAIK,EAAW,EAEX,eAACG,EAAA,EAAD,CAAOC,GAAG,UAAUC,KAAK,OAAzB,UACGL,EADH,gBAMF,cAACG,EAAA,EAAD,CAAOC,GAAG,YAAYC,KAAK,QAA3B,qBAMJ,SAASC,EAAUC,GACjB,IAAMC,EAAWD,EAAMC,SACvB,MAAiB,OAAbA,GAAkC,KAAbA,EAChB,KAGP,sBAAKrE,UAAU,mDAAf,UACE,qBAAKA,UAAU,kBAAkBO,IAAK+D,EAAgBhE,IAAI,KAC1D,sBAAMN,UAAU,aAAhB,SAA8BkD,OAKpC,SAASqB,EAAWX,GAClB,OACE,cAACI,EAAA,EAAD,CAAOC,GAAG,SAAV,SACG,IAAIV,IAKX,SAASiB,EAAUZ,GACjB,OACA,mCAEK,SAAIE,KAAKC,MAAOT,EAAYb,EAAa,KAAK,MAM/D,OAEE,cAACgC,EAAA,EAAD,UACA,cAAC,IAAD,CAAMC,GAAE,iBAAYtB,GAAQpD,UAAU,SAAS2E,MAAO,CAACC,MAAO,QAASC,eAAgB,QAAvF,SACE,eAACC,EAAA,EAAD,CAAM9E,UAAU,WAAhB,UACE,cAAC8E,EAAA,EAAKC,IAAN,CAAU/E,UAAU,WAAWO,IAAK0C,IACpC,eAAC6B,EAAA,EAAKE,WAAN,CAAiBhF,UAAU,mBAA3B,UACE,sBAAMA,UAAU,8CAChB,cAACmE,EAAD,CAAWE,SAAUnB,OAEvB,eAAC4B,EAAA,EAAKG,KAAN,WACE,cAACH,EAAA,EAAK9B,MAAN,CAAYhD,UAAU,aAAtB,SAAoCgD,IACpC,eAAC8B,EAAA,EAAKI,KAAN,CAAWlF,UAAU,YAArB,UACE,cAAC2D,EAAD,CAAUwB,UAAWhC,IADvB,IACoC,cAACoB,EAAD,IADpC,IACmD,cAACC,EAAD,kB,gBCoD9CY,MA/Jf,YAA8G,IAApFC,EAAmF,EAAnFA,YAAaC,EAAsE,EAAtEA,kBAAmBC,EAAmD,EAAnDA,eAAgBC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,iBACvF,OACF,cAACtF,EAAA,EAAD,CAAWuF,MAAM,KAAjB,SACA,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGhG,UAAU,4BAAlD,UACI,cAACyE,EAAA,EAAD,CAAKzE,UAAU,YAAf,SACA,eAACiG,EAAA,EAAD,CAAUjG,UAAU,MAApB,UACE,cAACiG,EAAA,EAAStF,OAAV,CAAiB+E,MAAM,KAAKQ,KAAK,KAAKrF,GAAG,iBAAiBb,UAAU,iBAApE,SACGwF,IAGH,eAACS,EAAA,EAASE,KAAV,CAAenG,UAAU,QAAzB,UACC,cAACiG,EAAA,EAAS/E,KAAV,CACGb,KAAK,IACL+F,QAAS,WAChBd,IACSD,IACAI,EAAiB,eALtB,wBAUC,cAACQ,EAAA,EAAS/E,KAAV,CACEb,KAAK,IACL+F,QAAS,WACfd,IACQC,EAAe,UACfE,EAAiB,WALrB,oBAUA,cAACQ,EAAA,EAAS/E,KAAV,CACEb,KAAK,IACL+F,QAAS,WACRd,IACCC,EAAe,aACfE,EAAiB,cALrB,uBAUA,cAACQ,EAAA,EAAS/E,KAAV,CACEb,KAAK,IACL+F,QAAS,WACRd,IACCC,EAAe,gBACfE,EAAiB,iBALrB,kCAaH,cAAChB,EAAA,EAAD,CAAKzE,UAAU,YAAf,SACA,eAACiG,EAAA,EAAD,CAAUjG,UAAU,MAApB,UACC,cAACiG,EAAA,EAAStF,OAAV,CAAiBuF,KAAK,KAAKrF,GAAG,iBAAiBb,UAAU,iBAAzD,SACGwF,IAGH,eAACS,EAAA,EAASE,KAAV,CAAenG,UAAU,QAAzB,UACC,cAACiG,EAAA,EAAS/E,KAAV,CACGb,KAAK,IACL+F,QAAS,WACbd,IACMD,IACAI,EAAiB,eALtB,wBAUC,cAACQ,EAAA,EAAS/E,KAAV,CACEb,KAAK,IACL+F,QAAS,WACbd,IACMC,EAAe,UACfE,EAAiB,WALrB,oBAUA,cAACQ,EAAA,EAAS/E,KAAV,CACEb,KAAK,IACL+F,QAAS,WACPd,IACAC,EAAe,aACfE,EAAiB,cALrB,uBAUA,cAACQ,EAAA,EAAS/E,KAAV,CACEb,KAAK,IACL+F,QAAS,WACPd,IACAC,EAAe,gBACfE,EAAiB,iBALrB,kCAaF,cAAChB,EAAA,EAAD,CAAKzE,UAAU,YAAf,SACD,eAACiG,EAAA,EAAD,CAAUjG,UAAU,MAApB,UACC,cAACiG,EAAA,EAAStF,OAAV,CAAiBuF,KAAK,KAAKrF,GAAG,iBAAiBb,UAAU,iBAAzD,SACGwF,IAGH,eAACS,EAAA,EAASE,KAAV,CAAenG,UAAU,QAAzB,UACC,cAACiG,EAAA,EAAS/E,KAAV,CACGb,KAAK,IACL+F,QAAS,WACbd,IACMD,IACAI,EAAiB,eALtB,wBAUC,cAACQ,EAAA,EAAS/E,KAAV,CACEb,KAAK,IACL+F,QAAS,WACbd,IACMC,EAAe,UACfE,EAAiB,WALrB,oBAUA,cAACQ,EAAA,EAAS/E,KAAV,CACEb,KAAK,IACL+F,QAAS,WACPd,IACAC,EAAe,aACfE,EAAiB,cALrB,uBAUA,cAACQ,EAAA,EAAS/E,KAAV,CACEb,KAAK,IACL+F,QAAS,WACPd,IACAC,EAAe,gBACfE,EAAiB,iBALrB,wC,iBClEOY,EAvEG,SAAC,GASZ,IARLC,EAQI,EARJA,MAGAjB,GAKI,EAPJkB,MAOI,EANJC,QAMI,EALJnB,aACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,cACAC,EACI,EADJA,iBASA,OAAqB,IAAjBa,EAAMG,OAEN,sBAAKzG,UAAU,mBAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,CACEqF,YAAaA,EACbC,kBAAmBA,EACnBC,eAAgBA,EAChBC,cAAeA,EACfC,iBAAkBA,MAGtB,cAACE,EAAA,EAAD,CAAKC,GAAI,EAAGG,GAAI,EAAG/F,UAAU,MAA7B,SACE,mBAAGA,UAAU,MAAb,kCAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,CACEqF,YAAaA,EACbC,kBAAmBA,EACnBC,eAAgBA,EAChBC,cAAeA,EACfC,iBAAkBA,MAGtB,cAACE,EAAA,EAAD,CAAKC,GAAI,EAAGG,GAAI,EAAG/F,UAAU,MAA7B,SACGsG,EAAMI,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEE1D,MAAOoD,EAAMM,GAAGC,MAChB7D,MAAOsD,EAAMM,GAAG5D,MAChBG,SAAUmD,EAAMM,GAAGzD,SACnBE,MAAOiD,EAAMM,GAAGE,MAChB1D,KAAMkD,EAAMM,GAAGxD,KACfH,MAAOqD,EAAMM,GAAG3D,MAChBK,UAAWgD,EAAMM,GAAGtD,UACpBC,SAAU+C,EAAMM,GAAGrC,WACnBd,IAAK6C,EAAMM,GAAGnD,KATTmD,YCpBNG,EAjCG,SAAC,GAAoF,IAAnFC,EAAkF,EAAlFA,YAAaC,EAAqE,EAArEA,eAAqE,EAArD1B,eAAqD,EAArCC,cAAqC,EAAtBC,iBAQ/E,OACC,sBAAKzF,UAAU,yBAAf,UACA,sBAAMkH,IAAI,aAAa7G,KAAK,8DAC5B,uBAAOL,UAAU,YACfmH,MAAOH,EACTI,KAAK,SACLC,YAAY,kDACZC,SAAW,SAACC,GACFN,EAAeM,U,wBCcZC,EA5BC,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAEVC,EAAapB,EAAMqB,QAAO,SAAAC,GAC9B,OAAOA,EAAKxE,OAASqE,EAAMI,OAAOvB,SAKpC,OAFAzD,QAAQC,IAAI4E,EAAW,GAAGI,YAAYC,MAAM,OAG1C,gCACE,cAAC,EAAD,IACA,oBAAI/H,UAAU,yBAAd,SAAuC,qBAAKM,IAAI,GAAGC,IAAKmH,EAAW,GAAGzE,UACrE,eAAC6B,EAAA,EAAD,CAAM9E,UAAU,oBAAhB,UACL,cAAC8E,EAAA,EAAKkD,OAAN,wBACA,eAAClD,EAAA,EAAKG,KAAN,WACE,cAACH,EAAA,EAAK9B,MAAN,UAAa0E,EAAW,GAAG1E,QAC3B,cAAC8B,EAAA,EAAKI,KAAN,CAAWlF,UAAU,kBAArB,SACG0H,EAAW,GAAGI,cAEjB,cAACG,EAAA,EAAD,CAAQhI,QAAQ,UAAhB,oC,OCyIWiI,MArJf,WAGI,SAASC,IACX,IAAQC,EAAaC,cAAbD,SAMR,OAJAE,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,CAACJ,IAEG,KAIL,IAiBEK,EAjBkB,SAACnC,GAKrB,IAJA,IAAIoC,EAAI,EACJC,EAAI,GACJC,EAActC,EAAMuC,MAAM,EAAG,IAC7BJ,EAAU,GACPG,EAAYnC,OAAS,GAC1BgC,EAAQK,KAAKF,GACbF,GAAK,GACLC,GAAK,GACLC,EAActC,EAAMuC,MAAMH,EAAGC,GAG/B,OAAOF,EAKKM,CAAYzC,GACtB0C,EAAYlF,KAAKmF,KAAKR,EAAQhC,QAGlC,EAAoCyC,mBAAST,EAAQ,IAArD,mBAAOU,EAAP,KAAmBC,EAAnB,KAQMC,EAAkB,SAACC,GACvB,IAAIC,EAAcD,EAAKE,SACvB3G,QAAQC,IAAIyG,GACZ,IAAME,EARW,SAACF,GAElB,OADad,EAAQc,GAOAG,CAAWH,GAChC1G,QAAQC,IAAI2G,GACZL,EAAcK,GACdE,EAAYJ,GACZhB,OAAOC,SAAS,EAAG,IAIrB,EAAsCU,mBAAS,IAA/C,mBAAOlC,EAAP,KAAoB4C,EAApB,KACA,EAAsCV,mBAAS,IAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAAgCZ,mBAAS,GAAzC,mBAAOa,EAAP,KAAiBJ,EAAjB,KACA,EAA0CT,mBAAS,cAAnD,mBAAO1D,EAAP,KAAsBwE,EAAtB,KACMvE,EAAmB,SAACwE,GAAD,OAAmBD,EAAiBC,IAIvDhD,EAAiB,SAACiD,GACtBN,EAAeM,EAAMC,OAAOhD,QAIxB7B,EAAoB,SAAC4E,GACzBN,EAAe,KAGXvE,EAAc,SAAC6E,GACnBJ,EAAe,KAGXvE,EAAiB,SAAC6E,GACtBN,EAAeM,IAgBjB,OATsB9D,EAAMqB,QAAO,SAACC,GAClC,OACEA,EAAK5E,MAAMqH,cAAcC,SAAStD,EAAYqD,gBAC9CzC,EAAKd,MAAMuD,cAAcC,SAAST,EAAYQ,kBAOhD,8BACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEE,KAAK,IACLC,OAAK,EACLC,OAAQ,SAAC7G,GAAD,OACN,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEoD,YAAaA,EACbC,eAAgBA,EAChB1B,eAAgBA,EAChBC,cAAeA,EACfC,iBAAkBA,IAGpB,cAAC,EAAD,CACEa,MAAO6C,EACP9D,YAAaA,EACbC,kBAAmBA,EACnBC,eAAgBA,EAChBC,cAAeA,EACfC,iBAAkBA,IAEE,cAAC,IAAD,CACAiF,YAAaX,EACrCY,cAAe,KACfC,UAAW,KACXC,WAAY,MACZC,UAAW9B,EACX+B,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAc5B,EACd6B,mBAAoB,oCACpBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,YACnBC,mBAAoB,YACpBC,gBAAiB,iBAQrB,cAAC,IAAD,CAAOnB,KAAK,gBAAgBoB,UAAWnE,IACvC,cAACW,EAAD,UChJSyD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCCdQ,IAAS5B,OACP,cAAC,IAAM6B,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.653236ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.55b508d1.svg\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport { Navbar, Container, Nav, NavDropdown} from 'react-bootstrap';\r\n\r\n \r\nconst Navi = () => {\r\n  \r\n    return (\r\n  <Navbar className=\"fixed-top navbar\" variant=\"dark\" expand=\"lg\">\r\n    <Container>\r\n      <Navbar.Brand className=\"logotext \" href=\"#\" >\r\n        <img\r\n          alt=\"\"\r\n          src={logo}\r\n          width=\"38\"\r\n          height=\"38\"\r\n          className=\"logo d-inline-block align-text-center\"\r\n\r\n        />{' '}\r\n      MaySaleBa?\r\n      </Navbar.Brand>\r\n       <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"me-auto navlink\">\r\n        <Nav.Link href=\"#home\">Switch</Nav.Link>\r\n        <Nav.Link href=\"#link\">Playstation</Nav.Link>\r\n        <NavDropdown title=\"Gift Cards\" id=\"basic-nav-dropdown\">\r\n          <NavDropdown.Item href=\"#action/3.1\">eShop</NavDropdown.Item>\r\n          <NavDropdown.Item href=\"#action/3.2\">PS Store</NavDropdown.Item>\r\n        </NavDropdown>\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>\r\n )\r\n  \r\n}\r\n \r\nexport default Navi;","export default __webpack_public_path__ + \"static/media/OpenCritic_logo.4885474e.svg\";","import React from \"react\";\r\nimport { Badge, Card, Col } from \"react-bootstrap\";\r\nimport OpenCriticLogo from \"./OpenCritic_logo.svg\";\r\nimport \"./Cards.css\";\r\nimport {  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\n            var today = new Date();\r\n            var dd = String(today.getDate()).padStart(2, '0');\r\n            var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n            var yyyy = today.getFullYear();\r\n\r\n            today = yyyy + '-' + mm + '-' + dd;\r\n\r\n            var theURL = 'https://api.exchangerate.host/latest?base=PHP&v=_' + today + '_';\r\n\r\n            function httpGet(theUrl) {\r\n                var xmlHttp = new XMLHttpRequest();\r\n                xmlHttp.open(\"GET\", theURL, false); // false for synchronous request\r\n                xmlHttp.send(null);\r\n                return xmlHttp.response;\r\n            }\r\n\r\n            let fxc = httpGet();\r\n            const fxcp = JSON.parse(fxc)\r\n            \r\n\r\n            var phpExchange = 1 / fxcp.rates.USD;\r\n            var mexExchange = 1 / fxcp.rates.MXN;\r\n\r\n            console.log(phpExchange);\r\n\r\nconst Cards = ({ Title, Image, Score, SaleEnds, Genre, Slug, SalePrice, Discount, URL }) => {\r\n  // console.log(SalePrice);\r\n  // var d = new Date();\r\n  // var lastd = new Date(d.setDate(d.getDate() - 3));\r\n  // var da = String(d.getDate()).padStart(2, \"0\");\r\n  // var mo = String(d.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n  // var year = d.getFullYear();\r\n\r\n  // var daysago = year + \"-\" + mo + \"-\" + da;\r\n\r\n            const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\n            const firstDate = new Date();\r\n            const secondDate = new Date(SaleEnds);\r\n            // const diffDays = Math.round((secondDate - firstDate) / oneDay);\r\n\r\n            function DaysLeft(props) {\r\n              // const isExpired = props.isExpired;\r\n              const diffDays = Math.round((secondDate - firstDate) / oneDay);\r\n\r\n              if (diffDays > 0) {\r\n                return (\r\n                  <Badge bg=\"warning\" text=\"dark\">\r\n                    {diffDays} days left\r\n                  </Badge>\r\n                );\r\n              }\r\n              return (\r\n                <Badge bg=\"secondary\" text=\"light\">\r\n                  Expired\r\n                </Badge>\r\n              );\r\n            }\r\n\r\n            function OpenScore(score) {\r\n              const hasScore = score.hasScore;\r\n              if (hasScore === \"-1\" || hasScore === \"\") {\r\n                return null;\r\n              }\r\n              return (\r\n                <div className=\"d-flex justify-content-left opencritic-container\">\r\n                  <img className=\"opencritic-logo\" src={OpenCriticLogo} alt=''/>\r\n                  <span className=\"score-text\">{Score}</span>\r\n                </div>\r\n              );\r\n            }\r\n\r\n            function PercentOff(props) {\r\n              return (\r\n                <Badge bg=\"danger\">\r\n                  {\"-\"+Discount}\r\n                </Badge>\r\n              );\r\n            }\r\n\r\n            function PesoPrice(props){\r\n              return (\r\n              <>\r\n                 \r\n                  {\"₱\"+Math.round((SalePrice * phpExchange)*100)/100}\r\n               </>\r\n                )\r\n            }\r\n\r\n\r\n  return (\r\n    \r\n    <Col>\r\n    <Link to={`/games/${Slug}`} className=\"linkto\" style={{color: 'black', textDecoration: 'none'}}>\r\n      <Card className=\"border-0\">\r\n        <Card.Img className=\"card-img\" src={Image} />\r\n        <Card.ImgOverlay className=\"card-img-overlay\">\r\n          <span className=\"img-responsive float-end nbadges nintendo\"></span>\r\n          <OpenScore hasScore={Score} />\r\n        </Card.ImgOverlay>\r\n        <Card.Body>\r\n          <Card.Title className=\"card-title\">{Title}</Card.Title>\r\n          <Card.Text className=\"card-text\">\r\n            <DaysLeft isExpired={SaleEnds} /> <PercentOff /> <PesoPrice />\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n    </Col>\r\n    \r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport { Container, Dropdown, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction FilterDropDown({ clearFilter, clearSearchChange, onFilterChange, genreDropDown, onDropDownChange }) {\r\n  return (\r\n<Container fluid=\"md\">\r\n<Row xs={2} lg={2} sm={2} md={2} xl={3} className=\"justify-content-md-center\">\r\n    <Col className=\"col-style\">\r\n    <Dropdown className=\"m-2\">\r\n      <Dropdown.Toggle fluid=\"sm\" size=\"sm\" id=\"dropdown-basic\" className=\"dropdown-style\" >\r\n        {genreDropDown}\r\n      </Dropdown.Toggle>\r\n\r\n      <Dropdown.Menu className=\"w-100\">\r\n       <Dropdown.Item \r\n          href=\"#\"\r\n          onClick={() => {\r\n\t\t\tclearSearchChange();\r\n            clearFilter();\r\n            onDropDownChange(\"All genres\");\r\n          }}\r\n        >\r\n          All genres\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          href=\"#\"\r\n          onClick={() => {\r\n \t\t\tclearSearchChange();\r\n            onFilterChange(\"Action\");\r\n            onDropDownChange(\"Action\");\r\n          }}\r\n        >\r\n          Action\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          href=\"#\"\r\n          onClick={() => {\r\n          \tclearSearchChange();\r\n            onFilterChange(\"Adventure\");\r\n            onDropDownChange(\"Adventure\");\r\n          }}\r\n        >\r\n          Adventure\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          href=\"#\"\r\n          onClick={() => {\r\n          \tclearSearchChange();\r\n            onFilterChange(\"Role-Playing\");\r\n            onDropDownChange(\"Role-Playing\");\r\n          }}\r\n        >\r\n          Role-Playing\r\n        </Dropdown.Item>\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n    </Col>\r\n     <Col className=\"col-style\">\r\n     <Dropdown className=\"m-2\">\r\n      <Dropdown.Toggle size=\"sm\" id=\"dropdown-basic\" className=\"dropdown-style\">\r\n        {genreDropDown}\r\n      </Dropdown.Toggle>\r\n\r\n      <Dropdown.Menu className=\"w-100\">\r\n       <Dropdown.Item\r\n          href=\"#\"\r\n          onClick={() => {\r\n      clearSearchChange();\r\n            clearFilter();\r\n            onDropDownChange(\"All genres\");\r\n          }}\r\n        >\r\n          All genres\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          href=\"#\"\r\n          onClick={() => {\r\n      clearSearchChange();\r\n            onFilterChange(\"Action\");\r\n            onDropDownChange(\"Action\");\r\n          }}\r\n        >\r\n          Action\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          href=\"#\"\r\n          onClick={() => {\r\n            clearSearchChange();\r\n            onFilterChange(\"Adventure\");\r\n            onDropDownChange(\"Adventure\");\r\n          }}\r\n        >\r\n          Adventure\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          href=\"#\"\r\n          onClick={() => {\r\n            clearSearchChange();\r\n            onFilterChange(\"Role-Playing\");\r\n            onDropDownChange(\"Role-Playing\");\r\n          }}\r\n        >\r\n          Role-Playing\r\n        </Dropdown.Item>\r\n      </Dropdown.Menu >\r\n    </Dropdown>\r\n    </Col>\r\n      <Col className=\"col-style\">\r\n     <Dropdown className=\"m-2\">\r\n      <Dropdown.Toggle size=\"sm\" id=\"dropdown-basic\" className=\"dropdown-style\">\r\n        {genreDropDown}\r\n      </Dropdown.Toggle>\r\n\r\n      <Dropdown.Menu className=\"w-100\">\r\n       <Dropdown.Item\r\n          href=\"#\"\r\n          onClick={() => {\r\n      clearSearchChange();\r\n            clearFilter();\r\n            onDropDownChange(\"All genres\");\r\n          }}\r\n        >\r\n          All genres\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          href=\"#\"\r\n          onClick={() => {\r\n      clearSearchChange();\r\n            onFilterChange(\"Action\");\r\n            onDropDownChange(\"Action\");\r\n          }}\r\n        >\r\n          Action\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          href=\"#\"\r\n          onClick={() => {\r\n            clearSearchChange();\r\n            onFilterChange(\"Adventure\");\r\n            onDropDownChange(\"Adventure\");\r\n          }}\r\n        >\r\n          Adventure\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          href=\"#\"\r\n          onClick={() => {\r\n            clearSearchChange();\r\n            onFilterChange(\"Role-Playing\");\r\n            onDropDownChange(\"Role-Playing\");\r\n          }}\r\n        >\r\n          Role-Playing\r\n        </Dropdown.Item>\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n    </Col>\r\n</Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FilterDropDown;","import React, { useState, useEffect } from \"react\";\r\nimport Cards from \"./Cards\";\r\nimport { Card, Row } from \"react-bootstrap\";\r\nimport \"./Cards.css\";\r\nimport FilterDropDown from \"./FilterDropDown\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst CardGroup = ({\r\n  games,\r\n  posts,\r\n  loading,\r\n  clearFilter,\r\n  clearSearchChange,\r\n  onFilterChange,\r\n  genreDropDown,\r\n  onDropDownChange,\r\n}) => {\r\n  // console.log(games);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  if (games.length === 0) {\r\n    return (\r\n      <div className=\"custom-container\">\r\n        <div className=\"card-header-custom\">\r\n          <FilterDropDown\r\n            clearFilter={clearFilter}\r\n            clearSearchChange={clearSearchChange}\r\n            onFilterChange={onFilterChange}\r\n            genreDropDown={genreDropDown}\r\n            onDropDownChange={onDropDownChange}\r\n          />\r\n        </div>\r\n        <Row xs={2} md={4} className=\"g-2\">\r\n          <p className=\"m-3\">No Games Found!</p>\r\n        </Row>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"custom-container\">\r\n        <div className=\"card-header-custom\">\r\n          <FilterDropDown\r\n            clearFilter={clearFilter}\r\n            clearSearchChange={clearSearchChange}\r\n            onFilterChange={onFilterChange}\r\n            genreDropDown={genreDropDown}\r\n            onDropDownChange={onDropDownChange}\r\n          />\r\n        </div>\r\n        <Row xs={2} md={4} className=\"g-2\">\r\n          {games.map((user, i) => {\r\n            return (\r\n              <Cards\r\n                key={i}\r\n                Score={games[i].SCORE}\r\n                Title={games[i].Title}\r\n                SaleEnds={games[i].SaleEnds}\r\n                Genre={games[i].genre}\r\n                Slug={games[i].Slug}\r\n                Image={games[i].Image}\r\n                SalePrice={games[i].SalePrice}\r\n                Discount={games[i].PercentOff}\r\n                URL={games[i].URL}\r\n              />\r\n            );\r\n          })}\r\n        </Row>\r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CardGroup;\r\n","import React from 'react';\r\nimport './Cards.css';\r\n\r\n\r\nconst SearchBox = ({searchfield, onSearchChange, onFilterChange, genreDropDown, onDropDownChange}) => {\r\n// console.log(searchQuery);\r\n//  const history = useHistory();\r\n//     const onSubmit = e => {\r\n//         history.push(`?s=${searchQuery}`)\r\n//         e.preventDefault()\r\n//     };\r\n\r\n\treturn (\r\n\t\t<div className=\"text-center m-3 p-auto\">\r\n\t\t<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.8.1/css/solid.css\"/>\r\n\t\t<input className=\"searchbox\"\r\n    value={searchfield}\r\n\t\ttype='search' \r\n\t\tplaceholder=\"&#xF002;  Search Title, Publisher in All Games...\"\r\n\t\tonChange= {(e) => {\r\n            onSearchChange(e);\r\n            // onFilterChange(\"\");\r\n            // onDropDownChange(\"Genre\");\r\n          }}\r\n\t\t  \r\n\r\n\r\n\r\n    />\r\n\t\t\r\n\t\t</div>\r\n\t\t\r\n\r\n\r\n\t\t)\r\n}\r\n\r\nexport default SearchBox;\r\n\r\n\r\n// <Form>\r\n //  <InputGroup className=\"m-3 mx-auto\" >\r\n //    <FormControl id=\"header-search\" action=\"/\" method=\"GET\" name=\"s\" autoComplete=\"off\"  onSubmit={onSubmit} placeholder=\"Search Title, Publisher in All Games...\"\r\n //    />\r\n //       <button type=\"submit\">Search</button>\r\n //  </InputGroup>\r\n //  </Form>\r\n\r\n\r\n   // <form className=\"text-center m-3 p-auto\" action=\"/\" method=\"get\" autoComplete=\"off\" onSubmit={onSubmit}>\r\n   //      <label htmlFor=\"header-search\">\r\n   //          <span className=\"visually-hidden\">Search blog posts</span>\r\n   //      </label>\r\n\r\n   //     {/* value={searchQuery}\r\n   //              onInput={(e) => setSearchQuery(e.target.value)}*/}\r\n   //              <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.8.1/css/solid.css\"/>\r\n   //      <input className=\"searchbox\"\r\n   //         // value={searchQuery}\r\n   //              type=\"text\"\r\n   //               // onInput={(e) => searchChange(e.target.value)}\r\n   //              id=\"header-search\"\r\n   //              placeholder=\"&#xF002;  Search Title, Publisher in All Games...\"\r\n   //              name=\"s\" \r\n   //      />\r\n   //      <button type=\"submit\">Search</button>\r\n   //  </form>\r\n\r\n\r\n  // <form className=\"text-center m-3 p-auto\" action=\"/\" method=\"get\" onSubmit={onSubmit}>\r\n  //       <label htmlFor=\"header-search\">\r\n  //           <span className=\"visually-hidden\">Search Games</span>\r\n  //       </label>\r\n  //       <input\r\n  //          value={searchQuery}\r\n  //           onInput={e => setSearchQuery(e.target.value)}\r\n  //           type=\"text\"\r\n  //           id=\"header-search\"\r\n  //           placeholder=\"Search Games\"\r\n  //           name=\"search\" \r\n  //           // onChange = {searchChange}\r\n  //       />\r\n  //       <button type=\"search\">Search</button>\r\n  //   </form>","import React from 'react';\r\nimport games from './csvjson.json';\r\nimport Navi from './Navi'\r\nimport { Button, Card } from \"react-bootstrap\";\r\n\r\n\r\nconst Content = ({match}) => {\r\n\r\n  const matchGames = games.filter(game => {\r\n    return game.Slug === match.params.games\r\n  })\r\n\r\n  console.log(matchGames[0].description.split('\\n'));\r\n // console.log(matchGames[0].Image)\r\n  return (\r\n    <div>\r\n      <Navi />\r\n      <h1 className=\"text-center m-3 p-auto\"><img alt='' src={matchGames[0].Image} /></h1>\r\n       <Card className=\"content-container\">\r\n  <Card.Header>GAME INFO</Card.Header>\r\n  <Card.Body>\r\n    <Card.Title>{matchGames[0].Title}</Card.Title>\r\n    <Card.Text className=\"mb-2 text-muted\">\r\n      {matchGames[0].description}\r\n    </Card.Text>\r\n    <Button variant=\"primary\">Go somewhere</Button>\r\n  </Card.Body>\r\n</Card>\r\n    </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Content;","import React, { useState, useEffect } from \"react\";\nimport Navi from \"./Navi\";\nimport CardGroup from \"./CardGroup\";\nimport SearchBox from \"./SearchBox\";\nimport \"./App.css\";\nimport games from \"./csvjson.json\";\nimport Content from \"./Content\";\nimport FilterDropDown from \"./FilterDropDown\";\nimport { HashRouter as Router, Route, useLocation } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\n\n\n\nfunction App() {\n\n\n    function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n\n\n    const gameFromApp = (games) => {\n    var x = 0;\n    var y = 20;\n    var slicedArray = games.slice(0, 20); //50\n    var asliced = [];\n    while (slicedArray.length > 0) {\n      asliced.push(slicedArray);\n      x += 20; //x50\n      y += 20; //y100\n      slicedArray = games.slice(x, y); //50\n    }\n\n    return asliced;\n  };\n\n\n\n  let asliced = gameFromApp(games);\n  let totalPage = Math.ceil(asliced.length);\n  // console.log(totalpage);\n\n  const [pageNumber, setPageNumber] = useState(asliced[0]);\n  //       // console.log(pageGames)\n\n  const fetchGames = (currentPage) => {\n    const data = asliced[currentPage];\n    return data;\n  };\n\n  const handlePageClick = (data) => {\n    let currentPage = data.selected;\n    console.log(currentPage);\n    const currentPagex = fetchGames(currentPage);\n    console.log(currentPagex);\n    setPageNumber(currentPagex);\n    setCurrPage(currentPage);\n    window.scrollTo(0, 0)\n  };\n\n\n  const [searchfield, setSearchfield] = useState(\"\");\n  const [filterField, setFilterField] = useState(\"\");\n  const [currPage, setCurrPage] = useState(0);\n  const [genreDropDown, setGenreDropDown] = useState(\"All genres\");\n  const onDropDownChange = (dropDownValue) => setGenreDropDown(dropDownValue);\n\n\n\n  const onSearchChange = (event) => {\n    setSearchfield(event.target.value);\n    // event.preventDefault();\n  };\n\n  const clearSearchChange = (event) => {\n    setSearchfield(\"\");\n  }\n\n  const clearFilter = (event) => {\n    setFilterField(\"\");\n  }\n\n  const onFilterChange = (filterGenre) => {\n    setFilterField(filterGenre)\n  };\n\n\n\n\n\n  const filteredGames = games.filter((game) => {\n    return (\n      game.Title.toLowerCase().includes(searchfield.toLowerCase()) &&\n      game.genre.toLowerCase().includes(filterField.toLowerCase())\n    );\n  });\n\n\n\n  return (\n    <div>\n    <Router>\n      <Route\n        path=\"/\"\n        exact\n        render={(props) => (\n          <div>\n            <Navi />\n            <SearchBox \n              searchfield={searchfield}\n              onSearchChange={onSearchChange} \n              onFilterChange={onFilterChange}\n              genreDropDown={genreDropDown}\n              onDropDownChange={onDropDownChange}\n            />\n\n            <CardGroup \n              games={pageNumber} \n              clearFilter={clearFilter} \n              clearSearchChange={clearSearchChange} \n              onFilterChange={onFilterChange} \n              genreDropDown={genreDropDown} \n              onDropDownChange={onDropDownChange}/>\n\n                                  <ReactPaginate\n                                  initialPage={currPage}\n          previousLabel={\"<<\"}\n          nextLabel={\">>\"}\n          breakLabel={\"...\"}\n          pageCount={totalPage}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={3}\n          onPageChange={handlePageClick}\n          containerClassName={\"pagination justify-content-center\"}\n          pageClassName={\"page-item\"}\n          pageLinkClassName={\"page-link\"}\n          previousClassName={\"page-item\"}\n          previousLinkClassName={\"page-link\"}\n          nextClassName={\"page-item\"}\n          nextLinkClassName={\"page-link\"}\n          breakLinkClassName={\"page-link\"}\n          activeClassName={\"active\"}\n        />\n\n          </div>\n        )}      \n      />\n\n      \n      <Route path=\"/games/:games\" component={Content} />\n      <ScrollToTop />\n    </Router>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MyPagination from './MyPagination'\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}