{"version":3,"sources":["logo.svg","Navi.js","OpenCritic_logo.svg","Cards.js","CardList.js","SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Navi","Navbar","className","variant","expand","Container","Brand","href","alt","src","logo","width","height","Toggle","Collapse","id","Nav","Link","NavDropdown","title","Item","Cards","Title","Image","Score","SaleEnds","d","Date","da","setDate","getDate","String","padStart","mo","getMonth","oneDay","getFullYear","firstDate","secondDate","Math","round","DaysLeft","props","isExpired","diffDays","Badge","bg","text","OpenScore","score","hasScore","oc","Col","Card","Img","ImgOverlay","Body","Text","CardList","sliced","games","slice","console","log","Row","xs","md","map","user","i","SCORE","SearchBox","searchChange","rel","type","placeholder","onChange","App","onSearchChange","event","setState","searchfield","target","value","state","filteredGames","this","filter","game","toLowerCase","includes","Publisher","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad838352.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.55b508d1.svg\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport { Navbar, Container, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\r\n\r\n \r\nconst Navi = () => {\r\n  \r\n    return (\r\n  <Navbar className=\"fixed-top navbar\" variant=\"dark\" expand=\"lg\">\r\n    <Container>\r\n      <Navbar.Brand className=\"logotext \" href=\"#home\" >\r\n        <img\r\n          alt=\"\"\r\n          src={logo}\r\n          width=\"38\"\r\n          height=\"38\"\r\n          className=\"logo d-inline-block align-text-center\"\r\n\r\n        />{' '}\r\n      MaySaleBa?\r\n      </Navbar.Brand>\r\n       <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"me-auto navlink\">\r\n        <Nav.Link href=\"#home\">Switch</Nav.Link>\r\n        <Nav.Link href=\"#link\">Playstation</Nav.Link>\r\n        <NavDropdown title=\"Gift Cards\" id=\"basic-nav-dropdown\">\r\n          <NavDropdown.Item href=\"#action/3.1\">eShop</NavDropdown.Item>\r\n          <NavDropdown.Item href=\"#action/3.2\">PS Store</NavDropdown.Item>\r\n        </NavDropdown>\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>\r\n )\r\n  \r\n}\r\n \r\nexport default Navi;","export default __webpack_public_path__ + \"static/media/OpenCritic_logo.4885474e.svg\";","import React from \"react\";\r\nimport { Badge, Card, Col } from \"react-bootstrap\";\r\nimport oc from \"./OpenCritic_logo.svg\";\r\nimport \"./Cards.css\";\r\n\r\nconst Cards = ({ Title, Image, Score, SaleEnds }) => {\r\n  var d = new Date();\r\n  var lastd = new Date(d.setDate(d.getDate() - 3));\r\n  var da = String(d.getDate()).padStart(2, \"0\");\r\n  var mo = String(d.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n  var year = d.getFullYear();\r\n\r\n  var daysago = year + \"-\" + mo + \"-\" + da;\r\n\r\n  const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\n  const firstDate = new Date();\r\n  const secondDate = new Date(SaleEnds);\r\n  const diffDays = Math.round((secondDate - firstDate) / oneDay);\r\n\r\n  function DaysLeft(props) {\r\n    const isExpired = props.isExpired;\r\n    const diffDays = Math.round((secondDate - firstDate) / oneDay);\r\n\r\n    if (diffDays > 0) {\r\n      return (\r\n        <Badge bg=\"warning\" text=\"dark\">\r\n          {diffDays} days left\r\n        </Badge>\r\n      );\r\n    }\r\n    return (\r\n      <Badge bg=\"secondary\" text=\"light\">\r\n        Expired\r\n      </Badge>\r\n    );\r\n  }\r\n\r\n  function OpenScore(score) {\r\n    const hasScore = score.hasScore;\r\n    if (hasScore == -1 || hasScore == \"\") {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"d-flex justify-content-left opencritic\">\r\n        <img className=\"oc\" src={oc} />\r\n        <span className=\"card-text\">{Score}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Col>\r\n      <Card className=\"border-0\">\r\n        <Card.Img className=\"card-img\" src={Image} />\r\n        <Card.ImgOverlay className=\"card-img-overlay\">\r\n          <span className=\"img-responsive float-end nbadges nintendo\"></span>\r\n          <OpenScore hasScore={Score} />\r\n        </Card.ImgOverlay>\r\n        <Card.Body>\r\n          <Card.Title className=\"card-title\">{Title}</Card.Title>\r\n          <Card.Text className=\"card-text\">\r\n            <DaysLeft isExpired={SaleEnds} />\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport Cards from './Cards';\r\nimport { Row } from 'react-bootstrap';\r\nimport './Cards.css';\r\n\r\nconst CardList = ({ games }) => {\r\n\t// console.log(games)\r\n\t\r\n\r\n\tvar sliced = games.slice(0,20);\r\n\tconsole.log(sliced);\r\n\t\r\n\treturn(\r\n\r\n\r\n\r\n  \t\t<div className=\"custom-container\">\r\n  \t\t<Row xs={2} md={4} className=\"g-2\">\r\n  \t\t{\r\n  \t\t\tsliced.map((user,i) => \r\n\r\n\t{\r\n\r\n\t\treturn (<Cards key={i} \r\n\t\tScore={sliced[i].SCORE}\r\n\t\tTitle={sliced[i].Title}\r\n\t\tSaleEnds={sliced[i].SaleEnds} \r\n\t\tImage={sliced[i].Image} />);\r\n\t})\r\n  \t\t}\r\n\t\t</Row>\r\n\t\t</div>\r\n\t\t \r\n\r\n\r\n\t\t\r\n\t\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './Cards.css';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport { InputGroup, FormControl } from 'react-bootstrap';\r\n\r\n\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\treturn (\r\n\r\n  // <InputGroup className=\"m-3 mx-auto\">\r\n  //   <FormControl\r\n  //     placeholder=\"Search Title, Publisher in All Games...\"\r\n  //   />\r\n  //   <InputGroup.Text type=\"submit\" id=\"basic-addon2\"><FaSearch /></InputGroup.Text>\r\n  // </InputGroup>\r\n\r\n\t\t<div className=\"text-center m-3 p-auto\">\r\n\t\t<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.8.1/css/solid.css\"/>\r\n\t\t<input className=\"searchbox\"\r\n\t\ttype='search' \r\n\t\tplaceholder=\"&#xF002;  Search Title, Publisher in All Games...\"\r\n\t\tonChange={searchChange}\r\n\t\t/>\r\n\t\t\r\n\t\t</div>\r\n\t\t\r\n\t\t)\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\nimport Navi from './Navi'\nimport CardList from './CardList'\nimport SearchBox from './SearchBox'\nimport './App.css';\nimport games from './csvjson.json';\nimport Search from './search';\n\n\n\n\nclass App extends Component  {\n  constructor () {\n    super()\n    this.state = {\n        games: games,\n        searchfield: ''\n\n    }\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value })\n    console.log(event.target.value);\n   \n    // console.log(filteredGames);\n  }\n\n  render(){\n      const filteredGames = this.state.games.filter(game => {\n      return (game.Title.toLowerCase().includes(this.state.searchfield.toLowerCase()) || game.Publisher.toLowerCase().includes(this.state.searchfield.toLowerCase()))\n    })\n     return (\n      <div>\n    <Navi />\n    <SearchBox searchChange={this.onSearchChange}/>\n    <CardList games={filteredGames}/>\n    </div>\n      );\n  }\n   \n  }\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MyPagination from './MyPagination'\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}