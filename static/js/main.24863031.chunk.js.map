{"version":3,"sources":["logo.svg","Navi.js","OpenCritic_logo.svg","Cards.js","Content.js","CardGroup.js","SearchBox.js","Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Navi","Navbar","className","variant","expand","Container","Brand","href","alt","src","logo","width","height","Toggle","Collapse","id","Nav","Link","NavDropdown","title","Item","Cards","Title","Image","Score","SaleEnds","Genre","Slug","d","Date","da","setDate","getDate","String","padStart","mo","getMonth","oneDay","getFullYear","firstDate","secondDate","Math","round","DaysLeft","props","isExpired","diffDays","Badge","bg","text","OpenScore","score","hasScore","oc","Col","to","Card","Img","ImgOverlay","Body","Text","Content","match","matchGames","games","filter","game","params","console","log","CardGroup","posts","loading","sliced","slice","Row","xs","md","map","user","i","SCORE","genre","SearchBox","searchChange","rel","type","placeholder","onChange","Pagination","state","pager","this","items","length","setPage","initialPage","prevProps","prevState","page","pageSize","totalPages","getPager","pageOfItems","startIndex","endIndex","setState","onChangePage","totalItems","currentPage","startPage","endPage","ceil","min","pages","Array","keys","onClick","index","React","Component","defaultProps","App","onSearchChange","event","searchfield","target","value","preventDefault","filteredGames","toLowerCase","includes","Publisher","path","exact","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24863031.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.55b508d1.svg\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport { Navbar, Container, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\r\n\r\n \r\nconst Navi = () => {\r\n  \r\n    return (\r\n  <Navbar className=\"fixed-top navbar\" variant=\"dark\" expand=\"lg\">\r\n    <Container>\r\n      <Navbar.Brand className=\"logotext \" href=\"#home\" >\r\n        <img\r\n          alt=\"\"\r\n          src={logo}\r\n          width=\"38\"\r\n          height=\"38\"\r\n          className=\"logo d-inline-block align-text-center\"\r\n\r\n        />{' '}\r\n      MaySaleBa?\r\n      </Navbar.Brand>\r\n       <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"me-auto navlink\">\r\n        <Nav.Link href=\"#home\">Switch</Nav.Link>\r\n        <Nav.Link href=\"#link\">Playstation</Nav.Link>\r\n        <NavDropdown title=\"Gift Cards\" id=\"basic-nav-dropdown\">\r\n          <NavDropdown.Item href=\"#action/3.1\">eShop</NavDropdown.Item>\r\n          <NavDropdown.Item href=\"#action/3.2\">PS Store</NavDropdown.Item>\r\n        </NavDropdown>\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>\r\n )\r\n  \r\n}\r\n \r\nexport default Navi;","export default __webpack_public_path__ + \"static/media/OpenCritic_logo.4885474e.svg\";","import React from \"react\";\r\nimport { Badge, Card, Col } from \"react-bootstrap\";\r\nimport oc from \"./OpenCritic_logo.svg\";\r\nimport \"./Cards.css\";\r\nimport {  Link\r\n} from \"react-router-dom\";\r\n\r\nconst Cards = ({ Title, Image, Score, SaleEnds, Genre, Slug }) => {\r\n  // console.log(Genre);\r\n  var d = new Date();\r\n  var lastd = new Date(d.setDate(d.getDate() - 3));\r\n  var da = String(d.getDate()).padStart(2, \"0\");\r\n  var mo = String(d.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n  var year = d.getFullYear();\r\n\r\n  var daysago = year + \"-\" + mo + \"-\" + da;\r\n\r\n  const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\n  const firstDate = new Date();\r\n  const secondDate = new Date(SaleEnds);\r\n  const diffDays = Math.round((secondDate - firstDate) / oneDay);\r\n\r\n  function DaysLeft(props) {\r\n    const isExpired = props.isExpired;\r\n    const diffDays = Math.round((secondDate - firstDate) / oneDay);\r\n\r\n    if (diffDays > 0) {\r\n      return (\r\n        <Badge bg=\"warning\" text=\"dark\">\r\n          {diffDays} days left\r\n        </Badge>\r\n      );\r\n    }\r\n    return (\r\n      <Badge bg=\"secondary\" text=\"light\">\r\n        Expired\r\n      </Badge>\r\n    );\r\n  }\r\n\r\n  function OpenScore(score) {\r\n    const hasScore = score.hasScore;\r\n    if (hasScore == -1 || hasScore == \"\") {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"d-flex justify-content-left opencritic\">\r\n        <img className=\"oc\" src={oc} />\r\n        <span className=\"card-text\">{Score}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    \r\n    <Col>\r\n    <Link to={`/games/${Slug}`}>\r\n      <Card className=\"border-0\">\r\n        <Card.Img className=\"card-img\" src={Image} />\r\n        <Card.ImgOverlay className=\"card-img-overlay\">\r\n          <span className=\"img-responsive float-end nbadges nintendo\"></span>\r\n          <OpenScore hasScore={Score} />\r\n        </Card.ImgOverlay>\r\n        <Card.Body>\r\n          <Card.Title className=\"card-title\">{Title}</Card.Title>\r\n          <Card.Text className=\"card-text\">\r\n            <DaysLeft isExpired={SaleEnds} />\r\n          </Card.Text>\r\n          {Genre}\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n    </Col>\r\n    \r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport games from './csvjson.json';\r\nimport Navi from './Navi'\r\n\r\n\r\nconst Content = ({match}) => {\r\n\r\n  const matchGames = games.filter(game => {\r\n    return game.Slug === match.params.games\r\n  })\r\n console.log(matchGames[0].Image)\r\n  return (\r\n    <div>\r\n      <Navi />\r\n      <h1 className=\"text-center m-3 p-auto\"><img src={matchGames[0].Image} /></h1>\r\n    </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport Cards from './Cards';\r\nimport { Row } from 'react-bootstrap';\r\nimport Content from './Content'\r\nimport './Cards.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst CardGroup = ({ games, posts, loading }) => {\r\n\tconsole.log(games)\r\n\t\r\n\r\n\tvar sliced = games.slice(0,20);\r\n\tconsole.log(sliced[0])\r\n\treturn(\r\n\t\t\t\t\t<div className=\"custom-container\">\r\n\t\t\t  \t\t<Row xs={2} md={4} className=\"g-2\">\r\n\t\t\t  \t\t{\r\n\t\t\t  \t\t\tsliced.map((user,i) => \r\n\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\treturn (\r\n\t              \t\t\t\t<Cards key={i} \r\n\t\t\t\t\t\t\t\tScore={sliced[i].SCORE}\r\n\t\t\t\t\t\t\t\tTitle={sliced[i].Title}\r\n\t\t\t\t\t\t\t\tSaleEnds={sliced[i].SaleEnds}\r\n\t\t\t\t\t\t\t\tGenre={sliced[i].genre}\r\n\t\t\t\t\t\t\t\tSlug={sliced[i].Slug}\r\n\t\t\t\t\t\t\t\tImage={sliced[i].Image} />\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t  \t\t}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardGroup;\r\n","import React from 'react';\r\nimport './Cards.css';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport { InputGroup, FormControl, Form } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n// console.log(searchQuery);\r\n//  const history = useHistory();\r\n//     const onSubmit = e => {\r\n//         history.push(`?s=${searchQuery}`)\r\n//         e.preventDefault()\r\n//     };\r\n\r\n\treturn (\r\n\r\n\r\n\r\n\t// <Form>\r\n //  <InputGroup className=\"m-3 mx-auto\" >\r\n //    <FormControl id=\"header-search\" action=\"/\" method=\"GET\" name=\"s\" autoComplete=\"off\"  onSubmit={onSubmit} placeholder=\"Search Title, Publisher in All Games...\"\r\n //    />\r\n //       <button type=\"submit\">Search</button>\r\n //  </InputGroup>\r\n //  </Form>\r\n\r\n\r\n   // <form className=\"text-center m-3 p-auto\" action=\"/\" method=\"get\" autoComplete=\"off\" onSubmit={onSubmit}>\r\n   //      <label htmlFor=\"header-search\">\r\n   //          <span className=\"visually-hidden\">Search blog posts</span>\r\n   //      </label>\r\n\r\n   //     {/* value={searchQuery}\r\n   //              onInput={(e) => setSearchQuery(e.target.value)}*/}\r\n   //              <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.8.1/css/solid.css\"/>\r\n   //      <input className=\"searchbox\"\r\n   //         // value={searchQuery}\r\n   //              type=\"text\"\r\n   //               // onInput={(e) => searchChange(e.target.value)}\r\n   //              id=\"header-search\"\r\n   //              placeholder=\"&#xF002;  Search Title, Publisher in All Games...\"\r\n   //              name=\"s\" \r\n   //      />\r\n   //      <button type=\"submit\">Search</button>\r\n   //  </form>\r\n\r\n\r\n  // <form className=\"text-center m-3 p-auto\" action=\"/\" method=\"get\" onSubmit={onSubmit}>\r\n  //       <label htmlFor=\"header-search\">\r\n  //           <span className=\"visually-hidden\">Search Games</span>\r\n  //       </label>\r\n  //       <input\r\n  //        \tvalue={searchQuery}\r\n  //           onInput={e => setSearchQuery(e.target.value)}\r\n  //           type=\"text\"\r\n  //           id=\"header-search\"\r\n  //           placeholder=\"Search Games\"\r\n  //           name=\"search\" \r\n  //           // onChange = {searchChange}\r\n  //       />\r\n  //       <button type=\"search\">Search</button>\r\n  //   </form>\r\n\r\n\r\n\r\n\t\t<div className=\"text-center m-3 p-auto\">\r\n\t\t<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.8.1/css/solid.css\"/>\r\n\t\t<input className=\"searchbox\"\r\n\t\ttype='search' \r\n\t\tplaceholder=\"&#xF002;  Search Title, Publisher in All Games...\"\r\n\t\tonChange={searchChange}\r\n\t\t/>\r\n\t\t\r\n\t\t</div>\r\n\t\t\r\n\t\t)\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    initialPage: PropTypes.number,\r\n    pageSize: PropTypes.number\r\n}\r\n\r\nconst defaultProps = {\r\n    initialPage: 1,\r\n    pageSize: 10\r\n}\r\n\r\nclass Pagination extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { pager: {} };\r\n    }\r\n\r\n    componentWillMount() {\r\n        // set page if items array isn't empty\r\n        if (this.props.items && this.props.items.length) {\r\n            this.setPage(this.props.initialPage);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // reset page if items array has changed\r\n        if (this.props.items !== prevProps.items) {\r\n            this.setPage(this.props.initialPage);\r\n        }\r\n    }\r\n\r\n    setPage(page) {\r\n        var { items, pageSize } = this.props;\r\n        var pager = this.state.pager;\r\n\r\n        if (page < 1 || page > pager.totalPages) {\r\n            return;\r\n        }\r\n\r\n        // get new pager object for specified page\r\n        pager = this.getPager(items.length, page, pageSize);\r\n\r\n        // get new page of items from items array\r\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n\r\n        // update state\r\n        this.setState({ pager: pager });\r\n\r\n        // call change page function in parent component\r\n        this.props.onChangePage(pageOfItems);\r\n    }\r\n\r\n    getPager(totalItems, currentPage, pageSize) {\r\n        // default to first page\r\n        currentPage = currentPage || 1;\r\n\r\n        // default page size is 10\r\n        pageSize = pageSize || 10;\r\n\r\n        // calculate total pages\r\n        var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        var startPage, endPage;\r\n        if (totalPages <= 10) {\r\n            // less than 10 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // more than 10 total pages so calculate start and end pages\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 10;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 9;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 5;\r\n                endPage = currentPage + 4;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        var startIndex = (currentPage - 1) * pageSize;\r\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n\r\n    render() {\r\n        var pager = this.state.pager;\r\n\r\n        if (!pager.pages || pager.pages.length <= 1) {\r\n            // don't display pager if there is only 1 page\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ul className=\"pagination\">\r\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n                    <a onClick={() => this.setPage(1)}>First</a>\r\n                </li>\r\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n                    <a onClick={() => this.setPage(pager.currentPage - 1)}>Previous</a>\r\n                </li>\r\n                {pager.pages.map((page, index) =>\r\n                    <li key={index} className={pager.currentPage === page ? 'active' : ''}>\r\n                        <a onClick={() => this.setPage(page)}>{page}</a>\r\n                    </li>\r\n                )}\r\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n                    <a onClick={() => this.setPage(pager.currentPage + 1)}>Next</a>\r\n                </li>\r\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n                    <a onClick={() => this.setPage(pager.totalPages)}>Last</a>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nPagination.propTypes = propTypes;\r\nPagination.defaultProps = defaultProps;\r\nexport default Pagination;","import React, { Component, useState, useEffect } from 'react';\nimport Navi from './Navi'\nimport CardGroup from './CardGroup'\nimport SearchBox from './SearchBox'\nimport './App.css';\nimport games from './csvjson.json';\nimport Content from './Content';\n// import Search from './search';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Pagination1 from './Pagination'\n\n\n\nclass App extends Component  {\n  constructor () {\n    super()\n    this.state = {\n        games: games,\n        searchfield: ''\n    }\n  }\n\n  onSearchChange = (event) => {\n     \n      this.setState({ searchfield: event.target.value })\n      event.preventDefault();\n      // console.log(event.target[0].value);\n      // console.log(filteredGames);\n    }\n\n  render(){\n        const filteredGames = this.state.games.filter(game => {\n        return (game.Title.toLowerCase().includes(this.state.searchfield.toLowerCase()) || game.Publisher.toLowerCase().includes(this.state.searchfield.toLowerCase()))\n        })\n\n        return (\n          <Router>\n            <Route path=\"/\" exact render={props => \n                <div>\n                <Navi />\n                <SearchBox searchChange={this.onSearchChange}/>\n                <CardGroup games={filteredGames}/>\n                </div> }/>\n            <Route path=\"/games/:games\" component={Content} />\n          </Router>\n        );\n  }\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MyPagination from './MyPagination'\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}